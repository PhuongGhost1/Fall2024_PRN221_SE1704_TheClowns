@page
@model ProjectGroup.Pages.Customer.MessageModel

@{
    ViewData["Title"] = "Messages";
}

<div class="container mt-4">

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header bg-primary text-white">Conversations</div>
                    <div class="list-group list-group-flush">
                        @foreach (var conversation in Model.Conversations)
                        {
                            var conversationUserName = conversation.BuyerId == Model.UserId ? conversation.Seller?.Username : conversation.Buyer?.Username;

                            var ticketEventName = conversation?.Ticket?.EventName;

                            <a href="@(Url.Page("/Customer/Message", new { buyerId = conversation.BuyerId, sellerId = conversation.SellerId, ticketId = conversation.TicketId }))"
                               class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"
                               title="Chat with @(conversationUserName ?? "User")">

                                @if (!string.IsNullOrEmpty(conversationUserName))
                                {
                                    @conversationUserName

                                    if (ticketEventName != null)
                                    {
                                        <span>@ticketEventName</span>
                                    }
                                }
                                else
                                {
                                    <span>Unknown User</span>
                                }

                                @if (Model.Messages.Any(m => m.ConversationId == conversation.Id && m.SellerId != Model.UserId && !m.IsSender))
                                {
                                    <span class="badge bg-danger rounded-pill">New</span>
                                }
                            </a>
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-secondary text-white">
                        <span>
                            @{
                                if (Model.CurrentConversation?.Buyer != null && Model.CurrentConversation?.Seller != null)
                                {
                                    var otherUserName = Model.CurrentConversation.BuyerId == Model.UserId
                                    ? Model.CurrentConversation.Seller.Username
                                    : Model.CurrentConversation.Buyer.Username;

                                    @otherUserName
                                }
                                else
                                {
                                    <text>Select a conversation</text>
                                }
                            }
                        </span>
                    </div>

                    <div class="card-body">
                        @if (Model.Messages != null && Model.Messages.Any())
                        {
                            <div class="chat-messages">
                                @foreach (var message in Model.Messages)
                                {
                                    bool isBuyerMessage = message.SellerId == null;
                                    bool isSellerMessage = message.BuyerId == null;

                                    bool isCurrentBuyer = Model.UserId == Model.CurrentConversation?.BuyerId;
                                    bool isCurrentSeller = Model.UserId == Model.CurrentConversation?.SellerId;

                                    bool isCurrentUserBuyer = Model.UserId == message.BuyerId;
                                    bool isCurrentUserSeller = Model.UserId == message.SellerId;

                                    var alignment = isBuyerMessage ? (isCurrentBuyer ? "justify-content-end" : "justify-content-start") : (isCurrentSeller ? "justify-content-end" : "justify-content-start");
                                    var backgroundColor = isBuyerMessage ? (isCurrentBuyer ? "bg-primary text-white" : "bg-light text-dark") : (isCurrentSeller ? "bg-primary text-white" : "bg-light text-dark");
                                    var fontStyle = isBuyerMessage ? (isCurrentBuyer ? "font-weight-bold text-primary" : "font-italic text-secondary") : (isCurrentSeller ? "font-weight-bold text-primary" : "font-italic text-secondary");

                                    var messageText = isCurrentBuyer ? @Html.Raw(message.Message) : @Html.Raw(message.Message.Replace("href=", "data-disabled-href="));

                                    <div class="d-flex @alignment mb-2">
                                        <div class="p-2 rounded @backgroundColor @fontStyle">
                                            @messageText
                                            <small class="d-block @(isBuyerMessage ? (isCurrentBuyer ? "text-white" : "text-muted") : (isCurrentSeller ? "text-white" : "text-muted"))">
                                                @message.SentAt?.ToString("hh:mm tt")
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No messages selected.</p>
                        }
                    </div>


                    <div class="card-footer">
                        <form method="post" asp-page-handler="SendMessage" class="d-flex">
                            <input type="hidden" name="conversationId" value="@Model.CurrentConversation?.Id" />
                            <input type="hidden" name="buyerId" value="@Model.CurrentConversation?.BuyerId" />
                            <input type="hidden" name="sellerId" value="@Model.CurrentConversation?.SellerId" />
                            <input type="hidden" name="ticketId" value="@Model.CurrentConversation?.TicketId" />
                            <input type="text" name="messageContent" class="form-control" placeholder="Type a message..." required />
                            <button type="submit" class="btn btn-primary ms-2">Send</button>
                        </form>
                        @if (Model.UserId != Model.CurrentConversation?.BuyerId)
                        {
                            <form method="post" asp-page-handler="CreateTransaction" class="mt-2">
                                <input type="hidden" name="conversationId" value="@Model.CurrentConversation?.Id" />
                                <input type="hidden" name="buyerId" value="@Model.CurrentConversation?.BuyerId" />
                                <input type="hidden" name="sellerId" value="@Model.CurrentConversation?.SellerId" />
                                <input type="hidden" name="ticketId" value="@(Model.CurrentConversation?.TicketId)" />
                                <button type="submit" class="btn btn-success w-100 mt-2">Create Transaction</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
 
</div>